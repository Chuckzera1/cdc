{"version":3,"sources":["components/InputCustomized.jsx","components/TratadorErros.jsx","components/AuthorRefact.jsx","Templates/NavBar.jsx","App.js","Home.jsx","components/BookRefact.jsx","serviceWorker.js","index.js"],"names":["InputCustomized","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","msgErro","react_default","a","createElement","className","htmlFor","props","id","label","PubSub","subscribe","topico","erro","field","inputName","setState","defaultMessage","bind","Component","TratadorErro","erros","errors","map","publish","console","log","AuthorForm","nome","email","senha","enviaForm","assertThisInitialized","evento","preventDefault","$","ajax","url","contentType","dataType","type","data","JSON","stringify","success","resposta","initialState","error","status","TratadorErros","publicaErros","responseJSON","beforeSend","nomeInput","event","campoSendoAlterado","target","value","onSubmit","method","components_InputCustomized","name","placeholder","onChange","salvaAlteracao","required","AuthorTable","_this2","lista","author","i","key","AuthorBox","_this3","loadData","novaLista","e","alert","concat","AuthorRefact_AuthorForm","AuthorRefact_AuthorTable","deleteData","NavBar","Navbar_default","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","Nav_default","NavDropdown_default","title","Item","Link","App","children","Home","BookForm","titulo","preco","autorId","setTitulo","setPreco","setAutorId","filter","u","toString","includes","step","autores","autor","BookTable","returnAutorNome","book","BookBox","_this4","BookRefact_BookForm","BookRefact_BookTable","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","src_App_0","react_router","exact","path","component","BookRefact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5ca7a450.chunk.js","sourcesContent":["import React, {Component} from 'react'\r\nimport PubSub from 'pubsub-js'\r\n\r\nclass InputCustomized extends Component{\r\n   \r\n        constructor(){\r\n            super()\r\n            this.state = {msgErro: ''}\r\n        }\r\n\r\n\r\n   \r\n    render(){\r\n        return(\r\n        <div className=\"pure-control-group\">\r\n        <label htmlFor={this.props.id}>{this.props.label}</label> \r\n        <input {...this.props}/>\r\n             <span className=\"erro\">{this.state.msgErro}</span>     \r\n                 \r\n      </div>\r\n        )\r\n        \r\n    }\r\n    componentDidMount() {\r\n        PubSub.subscribe(\"erro-validacao\",function(topico,erro){\r\n            if(erro.field === this.props.inputName){\r\n            this.setState({msgErro:erro.defaultMessage});\r\n            }\r\n        }.bind(this))\r\n\r\n        PubSub.subscribe(\"limpa-erros\",function(topico){\r\n            this.setState({ msgErro:'' } );\r\n        }.bind(this))\r\n        }\r\n}\r\n\r\nexport default InputCustomized","import PubSub from 'pubsub-js'\r\n\r\nexport default class TratadorErro {\r\n    publicaErros(erros) {\r\n        erros.errors.map(function(erro){\r\n             PubSub.publish(\"erro-validacao\",erro)\r\n             return console.log(erro)})\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport $ from 'jquery'\r\nimport './../css/pure-release-1.0.0/pure-min.css'\r\nimport InputCustomized from './../components/InputCustomized'\r\nimport PubSub from 'pubsub-js'\r\nimport TratadorErros from './TratadorErros'\r\n\r\n\r\nclass AuthorForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { nome: '', email: '', senha: '' }\r\n        this.enviaForm = this.enviaForm.bind(this);\r\n    }\r\n\r\n    \r\n\r\n\r\n    enviaForm(evento) {\r\n        evento.preventDefault();\r\n        $.ajax({\r\n            //url:\"http://localhost:3001/author\"\r\n            url: \"http://cdc-react.herokuapp.com/api/autores\",\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            type: 'post',\r\n            data: JSON.stringify({ nome: this.state.nome, email: this.state.email, senha: this.state.senha }),\r\n            success: function (resposta) {\r\n                console.log(\"enviado com sucesso\");\r\n                PubSub.publish('atualiza-lista-autores', resposta);\r\n                this.initialState();\r\n            }.bind(this),\r\n            error: function (resposta) {\r\n                if (resposta.status === 400) {\r\n                    new TratadorErros().publicaErros(resposta.responseJSON);\r\n                }\r\n            },\r\n            beforeSend: function () {\r\n                PubSub.publish(\"limpa-erros\", {});\r\n            }\r\n        });\r\n    }\r\n\r\n    initialState() {\r\n        this.setState({ nome: '', email: '', senha: '' })\r\n    }\r\n\r\n    salvaAlteracao(nomeInput, event){\r\n        const campoSendoAlterado = []\r\n        campoSendoAlterado[nomeInput] = event.target.value\r\n        this.setState(campoSendoAlterado)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pure-form pure-form-aligned\">\r\n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm} method=\"post\">\r\n                    {\r\n                        //id, type, name, placeholder, value, onChange, required(true or false)\r\n                    }\r\n                    <InputCustomized label=\"Nome\" id=\"nome\" type=\"text\" name=\"nome\" placeholder=\"Nome\" value={this.state.nome || ''}\r\n                        onChange={this.salvaAlteracao.bind(this,'nome')} required={true} />\r\n                    <InputCustomized label=\"Email\" id=\"email\" type=\"email\" name=\"email\" placeholder=\"Email\" value={this.state.email || ''}\r\n                        onChange={this.salvaAlteracao.bind(this,'email')} required={true} />\r\n                    <InputCustomized label=\"Senha\" id=\"senha\" type=\"password\" name=\"senha\" placeholder=\"Senha\" value={this.state.senha || ''}\r\n                        onChange={this.salvaAlteracao.bind(this, 'senha')} required={true} />\r\n                    <button type=\"submit\" className=\"pure-button pure-button-primary\" >Gravar</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass AuthorTable extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { msgErro: '' };\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <table className=\"pure-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Nome</th>\r\n                        <th>email</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.lista.map(function (author, i) {\r\n                            author.id = i\r\n                            return (\r\n                                <tr key={author.id}>\r\n                                    <td>{author.id}</td>\r\n                                    <td>{author.nome}</td>\r\n                                    <td>{author.email}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger ml-2\" type=\"button\"\r\n                                            >\r\n                                            Excluir\r\n                                        </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default class AuthorBox extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { lista: [] }\r\n        this.loadData = this.loadData.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData()\r\n        console.log(this.state)\r\n\r\n        PubSub.subscribe('atualiza-lista-autores', function (topico, novaLista) {\r\n            this.loadData();\r\n        }.bind(this));\r\n    }\r\n\r\n    loadData() {\r\n        $.ajax({\r\n            //url:\"http://localhost:3001/author\"\r\n            url: 'http://cdc-react.herokuapp.com/api/autores',\r\n            dataType: 'json',\r\n            success: function (resposta) {\r\n                this.setState({ lista: resposta });\r\n            }.bind(this),\r\n            error: function (e) {\r\n                alert('Erro de conexão')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    deleteData(author) {\r\n        const id = author.id\r\n        $.ajax({\r\n            url: `http://cdc-react.herokuapp.com/api/autores/${author.id}`,\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            type: 'DELETE',\r\n            data: JSON.stringify({ id: `${id}` }),\r\n            success: function (resposta) {\r\n                console.log(\"enviado com sucesso\");\r\n                PubSub.publish('atualiza-lista-autores', resposta);\r\n                this.initialState();\r\n            }.bind(this),\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h1>Cadastro de autores</h1>\r\n                </div>\r\n                <div className=\"content\" id=\"content\">\r\n                    <AuthorForm loadData={this.loadData} />\r\n                    <AuthorTable lista={this.state.lista} deleteData={this.deleteData} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport NavDropdown from 'react-bootstrap/NavDropdown'\r\n//import Author from './Author'\r\nimport './../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport './navBar.css'\r\n\r\nexport default (props) => {\r\n  return (\r\n\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"/\">Biblioteca</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavDropdown title=\"Menu\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"/\"> Home</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/autor\"> Autores </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"/\"> Livros </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Nav>\r\n            <Nav.Link href=\"#deets\">Home</Nav.Link>\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n  )\r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport NavBar from './Templates/NavBar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"App\">\r\n      <NavBar/>\r\n          <div id=\"main\">\r\n            {this.props.children}\r\n          </div>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React,{Component} from 'react';\r\n\r\nexport default class Home extends Component {\r\n    render(){\r\n        return (\r\n          <div>        \r\n              <div className=\"header\">\r\n                <h1>Bem vindo ao sistema</h1>\r\n              </div>\r\n              <div className=\"content\" id=\"content\">                              \r\n              </div>\r\n          </div>\r\n\r\n        );        \r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PubSub from 'pubsub-js'\r\nimport InputCustomized from './InputCustomized'\r\nimport $ from 'jquery'\r\nimport TratadorErros from './TratadorErros'\r\n\r\nclass BookForm extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = { titulo: '', preco: '', autorId: '' }\r\n        this.enviaForm = this.enviaForm.bind(this)\r\n        this.setTitulo = this.setTitulo.bind(this)\r\n        this.setPreco = this.setPreco.bind(this)\r\n        this.setAutorId = this.setAutorId.bind(this)\r\n    }\r\n\r\n    enviaForm(evento) {\r\n        evento.preventDefault();\r\n        $.ajax({\r\n            //url: \"http://localhost:3001/book\",\r\n            url: \"http://cdc-react.herokuapp.com/api/livros\",\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            type: 'post',\r\n            data: JSON.stringify({ titulo: this.state.titulo, preco: this.state.preco, autorId: this.state.autorId }),\r\n            success: function (resposta) {\r\n                console.log(\"enviado com sucesso\");\r\n                PubSub.publish('atualiza-lista-livros', resposta);\r\n                this.initialState();\r\n            }.bind(this),\r\n            error: function (resposta) {\r\n                if (resposta.status === 400) {\r\n                    new TratadorErros().publicaErros(resposta.responseJSON);\r\n                }\r\n            },\r\n            beforeSend: function () {\r\n                PubSub.publish(\"limpa-erros\", {});\r\n            }\r\n        });\r\n    }\r\n    initialState() {\r\n        this.setState({ titulo: '', preco: '', autorId: '' })\r\n    }\r\n\r\n    setSearch(name) {\r\n        this.setState({ lista: this.state.lista.filter(u => u.titulo.toString().includes(name)) })\r\n    }\r\n\r\n    setTitulo(event) {\r\n        this.setState({ titulo: event.target.value })\r\n    }\r\n\r\n    setPreco(event) {\r\n        this.setState({ preco: event.target.value })\r\n    }\r\n\r\n    setAutorId(event) {\r\n        this.setState({ autorId: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"pure-form pure-form-aligned\">\r\n                <form className=\"pure-form pure-form-aligned\" onSubmit={this.enviaForm} method=\"post\">\r\n                    {\r\n                        //id, type, name, placeholder, value, onChange, required(true or false)\r\n                    }\r\n                    <InputCustomized label=\"Titulo\" id=\"titulo\" type=\"text\" name=\"titulo\" placeholder=\"titulo\" value={this.state.titulo || ''}\r\n                        onChange={e => this.setTitulo(e)} required={true} />\r\n                    <InputCustomized label=\"preco\" id=\"preco\" type=\"number\" name=\"preco\" placeholder=\"preco\" value={this.state.preco || ''}\r\n                        onChange={e => this.setPreco(e)} step={\".01\"} required={true} />\r\n                    <div className=\"pure-control-group\">\r\n                        <label htmlFor=\"autorId\">Autor</label>\r\n                        <select name=\"autorId\" id=\"autorId\" onChange={this.setAutorId}>\r\n                            <option value=\"\">Selecione autor</option>\r\n                            {\r\n                                this.props.autores.map(function (autor) {\r\n                                    return <option value={autor.id} key={autor.id}>{autor.nome}</option>\r\n                                })\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <button type=\"submit\" className=\"pure-button pure-button-primary\" >Gravar</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nclass BookTable extends Component {\r\n\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { msgErro: '' };\r\n        this.returnAutorNome = this.returnAutorNome.bind(this)\r\n    }\r\n\r\n    returnAutorNome(book, autor){\r\n        if(book.autorId === autor.id){\r\n            return autor.nome\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <table className=\"pure-table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Titulo</th>\r\n                        <th>Preco</th>\r\n                        <th>Autor</th>\r\n                        <th>Ações</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        this.props.lista.map(function (book, i,autores) {\r\n                            book.id = i\r\n                            return (\r\n                                <tr key={book.id}>\r\n                                    <td>{book.id}</td>\r\n                                    <td>{book.titulo}</td>\r\n                                    <td>{book.preco}</td>\r\n                                    <td>{book.autor.nome}</td>\r\n                                    <td>\r\n                                        <button className=\"btn btn-danger ml-2\" type=\"button\">\r\n                                            Excluir\r\n                                            </button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default class BookBox extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = { lista: [], autores: [] }\r\n        this.loadData = this.loadData.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n        $.ajax({\r\n            //url: \"http://localhost:3001/author\",\r\n            url: 'http://cdc-react.herokuapp.com/api/autores',\r\n            dataType: 'json',\r\n            success: function (resposta) {\r\n                this.setState({ autores: resposta });\r\n            }.bind(this),\r\n            error: function (e) {\r\n                alert('Erro de conexão')\r\n            }\r\n        })\r\n        console.log(this.state)\r\n\r\n        PubSub.subscribe('atualiza-lista-livros', function (topico, novaLista) {\r\n            this.loadData();\r\n        }.bind(this));\r\n    }\r\n\r\n    loadData() {\r\n        $.ajax({\r\n            //url: \"http://localhost:3001/book\",\r\n            url: 'http://cdc-react.herokuapp.com/api/livros',\r\n            dataType: 'json',\r\n            success: function (resposta) {\r\n                this.setState({ lista: resposta });\r\n            }.bind(this),\r\n            error: function (e) {\r\n                alert('Erro de conexão')\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    deleteData(author) {\r\n        const id = author.id\r\n        $.ajax({\r\n            url: `http://cdc-react.herokuapp.com/api/autores/${author.id}`,\r\n            contentType: 'application/json',\r\n            dataType: 'json',\r\n            type: 'DELETE',\r\n            data: JSON.stringify({ id: `${id}` }),\r\n            success: function (resposta) {\r\n                console.log(\"enviado com sucesso\");\r\n                PubSub.publish('atualiza-lista-autores', resposta);\r\n                this.initialState();\r\n            }.bind(this),\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"header\">\r\n                    <h1>Cadastro de autores</h1>\r\n                </div>\r\n                <div className=\"content\" id=\"content\">\r\n                    <BookForm loadData={this.loadData} autores={this.state.autores} />\r\n                    <BookTable loadData={this.loadData} lista={this.state.lista} autores={this.state.autores} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AuthorBox from './components/AuthorRefact';\r\nimport App from './App';\r\nimport Home from './Home'\r\nimport BookRefact from './components/BookRefact'\r\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    (<Router>  \r\n        <App>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route path=\"/autor\" component={AuthorBox}/>\r\n            <Route path=\"/book\" component={BookRefact}/>\r\n        </App>\r\n    </Router>),\r\n    document.getElementById('root'));\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}